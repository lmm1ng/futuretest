{"version":3,"sources":["reducers/table.js","reducers/dataButtons.js","reducers/addForm.js","reducers/pageNavigation.js","reducers/filterBlock.js","reducers/index.js","components/Table/index.jsx","actions/table.js","selectors/getSortedData.js","containers/Table.js","components/DataButtons/index.jsx","actions/pageNavigation.js","actions/dataButtons.js","containers/DataButtons.js","components/AddForm/index.jsx","actions/addForm.js","selectors/isFormValid.js","selectors/getFormObject.js","containers/AddForm.js","components/PageNavigation/index.jsx","containers/PageNavigation.js","utils/getMaxPageValue.js","components/FilterBlock/index.jsx","containers/FilterBlock.js","actions/filterBlock.js","index.jsx","store.js"],"names":["initialState","sortingColumn","order","isLoading","userSubInfo","data","isModal","idField","isIdFieldValid","firstNameField","isFirstNameFieldValid","lastNameField","isLastNameFieldValid","emailField","isEmailFieldValid","phoneField","isPhoneFieldValid","currentPage","inputValue","currentInputValue","combineReducers","table","state","action","type","payload","dataButtons","concat","addForm","pageNavigation","filterBlock","TableComp","headers","rows","setSorting","sortingArrow","setUserSubInfo","id","Dimmer","page","active","inverted","Loader","Boolean","length","selectable","celled","fixed","compact","Header","Row","map","header","HeaderCell","key","onClick","Body","slice","row","firstName","address","description","lastName","cell","Cell","Segment","Object","keys","TextArea","value","streetAddress","city","zip","setLoading","bool","getSortedData","createSelector","R","filter","isValid","forEach","toString","toLowerCase","indexOf","connect","e","dispatch","target","object","DataButtonsComp","dataLoader","Button","Group","color","setCurrentPage","number","setDataToState","array","axios","get","then","response","catch","err","console","log","AddFormComp","closeModal","onIdFieldChange","onFirstNameFieldChange","onLastNameFieldChange","onEmailFieldChange","onPhoneFieldChange","isFormValid","setFormObj","formObj","setModalState","Modal","open","trigger","onClose","Content","Form","Field","error","Input","onChange","disabled","setIdFieldState","setEmailFieldState","setPhoneFieldState","setFirstNameFieldState","setLastNameFieldState","getFormState","idFieldState","firstNameFieldState","lastNameFieldState","emailFieldState","phoneFieldState","getFormObject","idFieldValue","firstNameFieldValue","lastNameFieldValue","emailFieldValue","phoneFieldValue","email","phone","test","trim","PageNavigationComp","maxPage","Pagination","defaultActivePage","totalPages","onPageChange","activePage","Math","ceil","FilterBlockComp","setInputValue","setCurrentInputValue","placeholder","string","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40062d71.chunk.js","sourcesContent":["const initialState = {\r\n  sortingColumn: \"id\",\r\n  order: \"asc\",\r\n  isLoading: false,\r\n  userSubInfo: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SORTING_COLUMN\":\r\n      return {\r\n        ...state,\r\n        sortingColumn: action.payload\r\n      };\r\n    case \"SWITCH_ORDER\":\r\n      return {\r\n        ...state,\r\n        order: state.order === \"asc\" ? \"desc\" : \"asc\"\r\n      };\r\n    case \"SET_LOADING\":\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n      case \"SET_USER_SUB_INFO\":\r\n      return {\r\n        ...state,\r\n        userSubInfo: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  data: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      };\r\n    case \"SET_FORM_OBJ\":\r\n      return {\r\n        ...state,\r\n        data: state.data.concat(action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  isModal: false,\r\n  idField: \"1\",\r\n  isIdFieldValid: true,\r\n  firstNameField: \"Martin\",\r\n  isFirstNameFieldValid: true,\r\n  lastNameField: \"Potter\",\r\n  isLastNameFieldValid: true,\r\n  emailField: \"martin@example.com\",\r\n  isEmailFieldValid: true,\r\n  phoneField: \"(234)534-4790\",\r\n  isPhoneFieldValid: true\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_MODAL_STATE\":\r\n      return {\r\n        ...state,\r\n        isModal: action.payload\r\n      };\r\n    case \"SET_ID_FIELD\":\r\n      return {\r\n        ...state,\r\n        idField: action.payload\r\n      };\r\n    case \"SET_FIRST_NAME_FIELD\":\r\n      return {\r\n        ...state,\r\n        firstNameField: action.payload\r\n      };\r\n    case \"SET_LAST_NAME_FIELD\":\r\n      return {\r\n        ...state,\r\n        lastNameField: action.payload\r\n      };\r\n    case \"SET_EMAIL_FIELD\":\r\n      return {\r\n        ...state,\r\n        emailField: action.payload\r\n      };\r\n    case \"SET_PHONE_FIELD\":\r\n      return {\r\n        ...state,\r\n        phoneField: action.payload\r\n      };\r\n    case \"SET_ID_FIELD_STATE\":\r\n      return {\r\n        ...state,\r\n        isIdFieldValid: action.payload\r\n      };\r\n    case \"SET_EMAIL_FIELD_STATE\":\r\n      return {\r\n        ...state,\r\n        isEmailFieldValid: action.payload\r\n      };\r\n    case \"SET_PHONE_FIELD_STATE\":\r\n      return {\r\n        ...state,\r\n        isPhoneFieldValid: action.payload\r\n      };\r\n    case \"SET_FIRST_NAME_FIELD_STATE\":\r\n      return {\r\n        ...state,\r\n        isFirstNameFieldValid: action.payload\r\n      };\r\n    case \"SET_LAST_NAME_FIELD_STATE\":\r\n      return {\r\n        ...state,\r\n        isLastNameFieldValid: action.payload\r\n      };\r\n    case \"CLEAR_FORM_FIELDS\":\r\n      return {\r\n        ...state,\r\n        idField: \"1\",\r\n        firstNameField: \"Martin\",\r\n        lastNameField: \"Potter\",\r\n        emailField: \"martin@example.com\",\r\n        phoneField: \"(234)534-4790\",\r\n        isIdFieldValid: true,\r\n        isFirstNameFieldValid: true,\r\n        isLastNameFieldValid: true,\r\n        isEmailFieldValid: true,\r\n        isPhoneFieldValid: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  currentPage: 1\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  if (action.type === \"SET_CURRENT_PAGE\") {\r\n    return {\r\n      ...state,\r\n      currentPage: action.payload\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  inputValue: \"\",\r\n  currentInputValue: \"\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_INPUT_VALUE\":\r\n      return {\r\n        ...state,\r\n        inputValue: state.currentInputValue\r\n      };\r\n    case \"SET_CURRENT_INPUT_VALUE\":\r\n      return {\r\n        ...state,\r\n        currentInputValue: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport table from \"./table\";\r\nimport dataButtons from \"./dataButtons\";\r\nimport addForm from \"./addForm\";\r\nimport pageNavigation from \"./pageNavigation\";\r\nimport filterBlock from \"./filterBlock\";\r\n\r\nexport default combineReducers({\r\n  table,\r\n  dataButtons,\r\n  addForm,\r\n  pageNavigation,\r\n  filterBlock\r\n});\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Table, Dimmer, Loader, TextArea, Segment } from \"semantic-ui-react\";\r\n\r\nconst TableComp = ({\r\n  headers,\r\n  rows,\r\n  isLoading,\r\n  setSorting,\r\n  sortingArrow,\r\n  currentPage,\r\n  setUserSubInfo,\r\n  userSubInfo\r\n}) => (\r\n  <div id=\"table_block\">\r\n    <Dimmer page active={isLoading} inverted>\r\n      <Loader />\r\n    </Dimmer>\r\n    {(Boolean(rows.length) && (\r\n      <Table selectable celled fixed compact={false}>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            {headers.map(header => (\r\n              <Table.HeaderCell\r\n                key={`header-${header}`}\r\n                id={header}\r\n                onClick={setSorting}\r\n              >\r\n                {`${header} ${sortingArrow(header) || \"\"} `}\r\n              </Table.HeaderCell>\r\n            ))}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {rows\r\n            .slice(50 * (currentPage - 1), 50 + 50 * (currentPage - 1))\r\n            .map(row => (\r\n              <Table.Row\r\n                key={`row${row.id}-${row.firstName}`}\r\n                onClick={() =>\r\n                  setUserSubInfo({\r\n                    ...row.address,\r\n                    description: row.description,\r\n                    firstName: row.firstName,\r\n                    lastName: row.lastName\r\n                  })\r\n                }\r\n              >\r\n                {headers.map(cell => (\r\n                  <Table.Cell key={`cell-${cell}`}>{row[cell]}</Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n            ))}\r\n        </Table.Body>\r\n      </Table>\r\n    )) || <Segment id='table_alt_block'>Не выбран объём данных или ничего не найдено.</Segment>}\r\n    {Object.keys(userSubInfo).length !== 0 && (\r\n      <Segment id=\"userSub_block\">\r\n        <header>\r\n          <span>Выбран пользователь: </span>\r\n          <b>{`${userSubInfo.firstName} ${userSubInfo.lastName}`}</b>\r\n        </header>\r\n        <section id=\"userSub_block_description\">\r\n          <span>Описание: </span>\r\n          <TextArea value={userSubInfo.description || \"Нет данных\"} />\r\n          <span>\r\n            Адрес проживания: <b>{userSubInfo.streetAddress || \"Нет данных\"}</b>\r\n          </span>\r\n          <span>\r\n            Город: <b>{userSubInfo.city || \"Нет данных\"}</b>\r\n          </span>\r\n          <span>\r\n            Провинция: <b>{userSubInfo.state || \"Нет данных\"}</b>\r\n          </span>\r\n          <span>\r\n            Индекс: <b>{userSubInfo.zip || \"Нет данных\"}</b>\r\n          </span>\r\n        </section>\r\n      </Segment>\r\n    )}\r\n  </div>\r\n);\r\n\r\nTableComp.propTypes = {\r\n  headers: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  rows: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  setSorting: PropTypes.func.isRequired,\r\n  sortingArrow: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  setUserSubInfo: PropTypes.func.isRequired,\r\n  userSubInfo: PropTypes.objectOf(PropTypes.any).isRequired\r\n};\r\n\r\nexport default TableComp;\r\n","export const setLoading = bool => ({\r\n  type: \"SET_LOADING\",\r\n  payload: bool\r\n});\r\n\r\nexport const setSortingColumn = string => ({\r\n  type: \"SET_SORTING_COLUMN\",\r\n  payload: string\r\n});\r\n\r\nexport const switchOrder = () => ({\r\n  type: \"SWITCH_ORDER\"\r\n});\r\n\r\nexport const setUserSubInfo = object => ({\r\n  type: \"SET_USER_SUB_INFO\",\r\n  payload: object\r\n});\r\n\r\nexport const setSorting = e => {\r\n  return dispatch => {\r\n    dispatch(switchOrder());\r\n    dispatch(setSortingColumn(e.target.id));\r\n  };\r\n};\r\n","import { createSelector } from \"reselect\";\r\nimport * as R from \"ramda\";\r\nimport { headers } from \"../containers/Table\";\r\n\r\nexport const getData = state => state.dataButtons.data;\r\nexport const getSortingColumn = state => state.table.sortingColumn;\r\nexport const getOrder = state => state.table.order;\r\nexport const getInputValue = state => state.filterBlock.inputValue;\r\n\r\nexport const getSortedData = createSelector(\r\n  [getData, getSortingColumn, getOrder, getInputValue],\r\n  (data, sortingColumn, order, inputValue) => {\r\n    let sortedData = [];\r\n    if (order === \"asc\") {\r\n      sortedData = R.sort(R.ascend(R.prop(sortingColumn)), data);\r\n    } else {\r\n      sortedData = R.sort(R.descend(R.prop(sortingColumn)), data);\r\n    }\r\n    return sortedData.filter(row => {\r\n      let isValid = false;\r\n      if (inputValue === \"\") return true;\r\n      headers.forEach(cell => {\r\n        if (\r\n          row[cell]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(inputValue.toLowerCase()) > -1\r\n        ) {\r\n          isValid = true;\r\n        }\r\n      });\r\n      return isValid;\r\n    });\r\n  }\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport TableComp from \"../components/Table\";\r\nimport { setSorting, setUserSubInfo } from \"../actions/table\";\r\nimport { getSortedData } from \"../selectors/getSortedData\";\r\n\r\nexport const headers = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\r\n\r\nexport default connect(\r\n  state => ({\r\n    headers,\r\n    rows: getSortedData(state),\r\n    inputValue: state.filterBlock.inputValue,\r\n    userSubInfo: state.table.userSubInfo,\r\n    isLoading: state.table.isLoading,\r\n    sortingColumn: state.table.sortingColumn,\r\n    currentPage: state.pageNavigation.currentPage,\r\n    sortingArrow: header => {\r\n      if (header === state.table.sortingColumn) {\r\n        if (state.table.order === \"asc\") {\r\n          return \"▼\";\r\n        } else {\r\n          return \"▲\";\r\n        }\r\n      }\r\n    }\r\n  }),\r\n  { setSorting, setUserSubInfo }\r\n)(TableComp);\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst DataButtonsComp = ({ dataLoader }) => (\r\n  <div id=\"data_buttons\">\r\n    <Button.Group color='blue'>\r\n      <Button id=\"small_data_button\" onClick={dataLoader}>\r\n        Small Data\r\n      </Button>\r\n      <Button id=\"big_data_button\" onClick={dataLoader}>\r\n        Big Data\r\n      </Button>\r\n    </Button.Group>\r\n  </div>\r\n);\r\n\r\nDataButtonsComp.propTypes = {\r\n  dataLoader: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DataButtonsComp;\r\n","export const setCurrentPage = number => ({\r\n  type: \"SET_CURRENT_PAGE\",\r\n  payload: number\r\n});\r\n","import axios from \"axios\";\r\nimport { setLoading } from \"../actions/table\";\r\nimport { setCurrentPage } from \"./pageNavigation\";\r\n\r\nconst setDataToState = array => ({\r\n  type: \"SET_DATA\",\r\n  payload: array\r\n});\r\n\r\nexport const setFormObj = object => ({\r\n  type: \"SET_FORM_OBJ\",\r\n  payload: object\r\n});\r\n\r\nexport const setData = e => {\r\n  return dispatch => {\r\n    dispatch(setLoading(true));\r\n    dispatch(setCurrentPage(1));\r\n    axios\r\n      .get(\r\n        e.target.id === \"small_data_button\"\r\n          ? \"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\"\r\n          : \"http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\"\r\n      )\r\n      .then(response => {\r\n        dispatch(setDataToState(response.data));\r\n        dispatch(setLoading(false));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch(setDataToState([]));\r\n        dispatch(setLoading(false));\r\n      });\r\n  };\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport DataButtonsComp from \"../components/DataButtons\";\r\nimport { setData } from \"../actions/dataButtons\";\r\n\r\nexport default connect(() => ({}), { dataLoader: setData })(DataButtonsComp);\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Input, Modal, Form } from \"semantic-ui-react\";\r\n\r\nconst AddFormComp = ({\r\n  isModal,\r\n  closeModal,\r\n  idField,\r\n  isIdFieldValid,\r\n  onIdFieldChange,\r\n  firstNameField,\r\n  onFirstNameFieldChange,\r\n  isFirstNameFieldValid,\r\n  lastNameField,\r\n  isLastNameFieldValid,\r\n  onLastNameFieldChange,\r\n  emailField,\r\n  isEmailFieldValid,\r\n  onEmailFieldChange,\r\n  phoneField,\r\n  isPhoneFieldValid,\r\n  onPhoneFieldChange,\r\n  isFormValid,\r\n  setFormObj,\r\n  formObj,\r\n  setModalState\r\n}) => (\r\n  <Modal\r\n    open={isModal}\r\n    trigger={\r\n      <Button\r\n        id=\"modal_trigger_button\"\r\n        color=\"green\"\r\n        onClick={() => setModalState(true)}\r\n      >\r\n        Добавить\r\n      </Button>\r\n    }\r\n    onClose={() => {\r\n      closeModal();\r\n      setModalState(false);\r\n    }}\r\n  >\r\n    <Modal.Content>\r\n      <Form>\r\n        <Form.Field error={!isIdFieldValid}>\r\n          <label>id</label>\r\n          <Input value={idField} onChange={onIdFieldChange} />\r\n        </Form.Field>\r\n        <Form.Field error={!isFirstNameFieldValid}>\r\n          <label>firstName</label>\r\n          <Input value={firstNameField} onChange={onFirstNameFieldChange} />\r\n        </Form.Field>\r\n        <Form.Field error={!isLastNameFieldValid}>\r\n          <label>lastName</label>\r\n          <Input value={lastNameField} onChange={onLastNameFieldChange} />\r\n        </Form.Field>\r\n        <Form.Field error={!isEmailFieldValid}>\r\n          <label>email</label>\r\n          <Input value={emailField} onChange={onEmailFieldChange} />\r\n        </Form.Field>\r\n        <Form.Field error={!isPhoneFieldValid}>\r\n          <label>phone</label>\r\n          <Input value={phoneField} onChange={onPhoneFieldChange} />\r\n        </Form.Field>\r\n        <Button\r\n          disabled={!isFormValid}\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            setFormObj(formObj);\r\n            setModalState(false);\r\n          }}\r\n        >\r\n          Добавить в таблицу\r\n        </Button>\r\n      </Form>\r\n    </Modal.Content>\r\n  </Modal>\r\n);\r\n\r\nAddFormComp.propTypes = {\r\n  isModal: PropTypes.bool.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  idField: PropTypes.string.isRequired,\r\n  firstNameField: PropTypes.string.isRequired,\r\n  lastNameField: PropTypes.string.isRequired,\r\n  emailField: PropTypes.string.isRequired,\r\n  phoneField: PropTypes.string.isRequired,\r\n  isIdFieldValid: PropTypes.bool.isRequired,\r\n  isFirstNameFieldValid: PropTypes.bool.isRequired,\r\n  isLastNameFieldValid: PropTypes.bool.isRequired,\r\n  isEmailFieldValid: PropTypes.bool.isRequired,\r\n  isPhoneFieldValid: PropTypes.bool.isRequired,\r\n  onIdFieldChange: PropTypes.func.isRequired,\r\n  onFirstNameFieldChange: PropTypes.func.isRequired,\r\n  onLastNameFieldChange: PropTypes.func.isRequired,\r\n  onEmailFieldChange: PropTypes.func.isRequired,\r\n  onPhoneFieldChange: PropTypes.func.isRequired,\r\n  isFormValid: PropTypes.bool.isRequired,\r\n  setModalState: PropTypes.func.isRequired,\r\n  setFormObj: PropTypes.func.isRequired,\r\n  formObj: PropTypes.object.isRequired\r\n};\r\n\r\nexport default AddFormComp;\r\n","export const setModalState = bool => ({\r\n  type: \"SET_MODAL_STATE\",\r\n  payload: bool\r\n});\r\n\r\nexport const setIdField = string => ({\r\n  type: \"SET_ID_FIELD\",\r\n  payload: string\r\n});\r\n\r\nexport const setFirstNameField = string => ({\r\n  type: \"SET_FIRST_NAME_FIELD\",\r\n  payload: string\r\n});\r\nexport const setLastNameField = string => ({\r\n  type: \"SET_LAST_NAME_FIELD\",\r\n  payload: string\r\n});\r\nexport const setEmailField = string => ({\r\n  type: \"SET_EMAIL_FIELD\",\r\n  payload: string\r\n});\r\nexport const setPhoneField = string => ({\r\n  type: \"SET_PHONE_FIELD\",\r\n  payload: string\r\n});\r\nexport const clearFormFields = () => ({\r\n  type: \"CLEAR_FORM_FIELDS\"\r\n});\r\n\r\nexport const setIdFieldState = bool => ({\r\n  type: \"SET_ID_FIELD_STATE\",\r\n  payload: bool\r\n});\r\n\r\nexport const setEmailFieldState = bool => ({\r\n  type: \"SET_EMAIL_FIELD_STATE\",\r\n  payload: bool\r\n});\r\n\r\nexport const setPhoneFieldState = bool => ({\r\n  type: \"SET_PHONE_FIELD_STATE\",\r\n  payload: bool\r\n});\r\n\r\nexport const setFirstNameFieldState = bool => ({\r\n  type: \"SET_FIRST_NAME_FIELD_STATE\",\r\n  payload: bool\r\n});\r\n\r\nexport const setLastNameFieldState = bool => ({\r\n  type: \"SET_LAST_NAME_FIELD_STATE\",\r\n  payload: bool\r\n});\r\n\r\nexport const onIdFieldChange = (e, data) => {\r\n  return dispatch => {\r\n    dispatch(setIdField(data.value));\r\n    if (/^[0-9]+$/.test(data.value)) {\r\n      dispatch(setIdFieldState(true));\r\n    } else {\r\n      dispatch(setIdFieldState(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const onEmailFieldChange = (e, data) => {\r\n  return dispatch => {\r\n    dispatch(setEmailField(data.value));\r\n    if (/.+@.+\\..+/i.test(data.value)) {\r\n      dispatch(setEmailFieldState(true));\r\n    } else {\r\n      dispatch(setEmailFieldState(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const onPhoneFieldChange = (e, data) => {\r\n  return dispatch => {\r\n    dispatch(setPhoneField(data.value));\r\n    if (\r\n      /^\\+?(\\d{1,3})?[- .]?\\(?(?:\\d{2,3})\\)?[- .]?\\d\\d\\d[- .]?\\d\\d\\d\\d$/.test(\r\n        data.value\r\n      )\r\n    ) {\r\n      dispatch(setPhoneFieldState(true));\r\n    } else {\r\n      dispatch(setPhoneFieldState(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const onFirstNameFieldChange = (e, data) => {\r\n  return dispatch => {\r\n    dispatch(setFirstNameField(data.value));\r\n    if (data.value.trim() !== \"\") {\r\n      dispatch(setFirstNameFieldState(true));\r\n    } else {\r\n      return dispatch(setFirstNameFieldState(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const onLastNameFieldChange = (e, data) => {\r\n  return dispatch => {\r\n    dispatch(setLastNameField(data.value));\r\n    if (data.value.trim() !== \"\") {\r\n      dispatch(setLastNameFieldState(true));\r\n    } else {\r\n      return dispatch(setLastNameFieldState(false));\r\n    }\r\n  };\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getIdFieldState = state => state.addForm.isIdFieldValid;\r\nexport const getEmailFieldState = state => state.addForm.isEmailFieldValid;\r\nexport const getPhoneFieldState = state => state.addForm.isPhoneFieldValid;\r\nexport const getFirstNameFieldState = state =>\r\n  state.addForm.isFirstNameFieldValid;\r\nexport const getLastNameFieldState = state =>\r\n  state.addForm.isLastNameFieldValid;\r\n\r\nexport const getFormState = createSelector(\r\n  [\r\n    getIdFieldState,\r\n    getFirstNameFieldState,\r\n    getLastNameFieldState,\r\n    getEmailFieldState,\r\n    getPhoneFieldState\r\n  ],\r\n  (\r\n    idFieldState,\r\n    firstNameFieldState,\r\n    lastNameFieldState,\r\n    emailFieldState,\r\n    phoneFieldState\r\n  ) => {\r\n    return (\r\n      idFieldState &&\r\n      firstNameFieldState &&\r\n      lastNameFieldState &&\r\n      emailFieldState &&\r\n      phoneFieldState\r\n    );\r\n  }\r\n);\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getIdFieldValue = state => state.addForm.idField;\r\nexport const getFirstNameFieldValue = state => state.addForm.firstNameField;\r\nexport const getLastNameFieldValue = state => state.addForm.lastNameField;\r\nexport const getEmailFieldValue = state => state.addForm.emailField;\r\nexport const getPhoneFieldValue = state => state.addForm.phoneField;\r\n\r\nexport const getFormObject = createSelector(\r\n  [\r\n    getIdFieldValue,\r\n    getFirstNameFieldValue,\r\n    getLastNameFieldValue,\r\n    getEmailFieldValue,\r\n    getPhoneFieldValue\r\n  ],\r\n  (\r\n    idFieldValue,\r\n    firstNameFieldValue,\r\n    lastNameFieldValue,\r\n    emailFieldValue,\r\n    phoneFieldValue\r\n  ) => ({\r\n    id: idFieldValue,\r\n    firstName: firstNameFieldValue,\r\n    lastName: lastNameFieldValue,\r\n    email: emailFieldValue,\r\n    phone: phoneFieldValue\r\n  })\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport AddFormComp from \"../components/AddForm\";\r\nimport { headers } from \"./Table\";\r\nimport { clearFormFields } from \"../actions/addForm\";\r\nimport { getFormState } from \"../selectors/isFormValid\";\r\nimport { getFormObject } from \"../selectors/getFormObject\";\r\nimport {\r\n  onIdFieldChange,\r\n  onFirstNameFieldChange,\r\n  onLastNameFieldChange,\r\n  onEmailFieldChange,\r\n  onPhoneFieldChange,\r\n  setModalState\r\n} from \"../actions/addForm\";\r\nimport { setFormObj } from \"../actions/dataButtons\";\r\n\r\nexport default connect(\r\n  state => ({\r\n    headers,\r\n    isModal: state.addForm.isModal,\r\n    idField: state.addForm.idField,\r\n    isIdFieldValid: state.addForm.isIdFieldValid,\r\n    firstNameField: state.addForm.firstNameField,\r\n    isFirstNameFieldValid: state.addForm.isFirstNameFieldValid,\r\n    lastNameField: state.addForm.lastNameField,\r\n    isLastNameFieldValid: state.addForm.isLastNameFieldValid,\r\n    emailField: state.addForm.emailField,\r\n    isEmailFieldValid: state.addForm.isEmailFieldValid,\r\n    phoneField: state.addForm.phoneField,\r\n    isPhoneFieldValid: state.addForm.isPhoneFieldValid,\r\n    isFormValid: getFormState(state),\r\n    formObj: getFormObject(state)\r\n  }),\r\n  {\r\n    closeModal: clearFormFields,\r\n    onIdFieldChange,\r\n    onFirstNameFieldChange,\r\n    onLastNameFieldChange,\r\n    onEmailFieldChange,\r\n    onPhoneFieldChange,\r\n    setFormObj,\r\n    setModalState\r\n  }\r\n)(AddFormComp);\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Pagination } from \"semantic-ui-react\";\r\n\r\nconst PageNavigationComp = ({ rows, maxPage, setCurrentPage }) =>\r\n  Boolean(rows.length) && (\r\n    <div id=\"pagination_block\">\r\n      <Pagination\r\n        defaultActivePage={1}\r\n        totalPages={maxPage}\r\n        onPageChange={(e, data) => setCurrentPage(data.activePage)}\r\n      />\r\n    </div>\r\n  );\r\n\r\nPageNavigationComp.propTypes = {\r\n  rows: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\r\n  maxPage: PropTypes.number.isRequired,\r\n  setCurrentPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PageNavigationComp;\r\n","import { connect } from \"react-redux\";\r\nimport PageNavigationComp from \"../components/PageNavigation\";\r\nimport { getMaxPageValue } from \"../utils/getMaxPageValue\";\r\nimport { setCurrentPage } from \"../actions/pageNavigation\";\r\nimport { getSortedData } from \"../selectors/getSortedData\";\r\n\r\nexport default connect(\r\n  state => ({\r\n    maxPage: getMaxPageValue(getSortedData(state)),\r\n    rows: getSortedData(state)\r\n  }),\r\n  { setCurrentPage }\r\n)(PageNavigationComp);\r\n","export const getMaxPageValue = data => Math.ceil(data.length / 50);\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input, Button } from \"semantic-ui-react\";\r\n\r\nconst FilterBlockComp = ({\r\n  setInputValue,\r\n  currentInputValue,\r\n  setCurrentInputValue\r\n}) => (\r\n  <div id=\"filter_block\">\r\n    <Input\r\n      value={currentInputValue}\r\n      placeholder=\"Введите данные...\"\r\n      onChange={(e, data) => setCurrentInputValue(data.value)}\r\n    />\r\n    <Button color=\"red\" onClick={setInputValue}>\r\n      Найти\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nFilterBlockComp.propTypes = {\r\n  setInputValue: PropTypes.func.isRequired,\r\n  setCurrentInputValue: PropTypes.func.isRequired,\r\n  currentInputValue: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FilterBlockComp;\r\n","import { connect } from \"react-redux\";\r\nimport FilterBlockComp from \"../components/FilterBlock\";\r\nimport { setInputValue, setCurrentInputValue } from \"../actions/filterBlock\";\r\n\r\nexport default connect(\r\n  state => ({ currentInputValue: state.filterBlock.currentInputValue }),\r\n  { setInputValue, setCurrentInputValue }\r\n)(FilterBlockComp);\r\n","export const setInputValue = () => ({\r\n  type: \"SET_INPUT_VALUE\",\r\n});\r\n\r\nexport const setCurrentInputValue = string => ({\r\n  type: \"SET_CURRENT_INPUT_VALUE\",\r\n  payload: string\r\n});\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport createStore from \"./store\";\r\nimport \"./index.css\";\r\nimport Table from \"./containers/Table\";\r\nimport DataButtons from \"./containers/DataButtons\";\r\nimport AddForm from \"./containers/AddForm\";\r\nimport PageNavigation from \"./containers/PageNavigation\";\r\nimport FilterBlock from \"./containers/FilterBlock\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nconst store = createStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AddForm />\r\n    <FilterBlock />\r\n    <DataButtons />\r\n    <Table />\r\n    <PageNavigation />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport default () =>\r\n  createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk, logger)));\r\n"],"sourceRoot":""}